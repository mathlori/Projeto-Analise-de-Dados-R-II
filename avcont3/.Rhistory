---
title: "Avaliação Continuada 3"
diabetes <- read.csv("C:/Users/mathl/Downloads/archive/diabetes.csv")
View(diabetes)
# Base de dados aleatória:
set.seed(23)
base1 <- sample(x <- 1L:100L, size <- 15, replace = TRUE)
cat("BASE DE DADOS SIMULADA:", base1) # Impressão com formatação.
# Base de dados real:
base2 <- read.csv("diabetes.csv", sep=",", dec=".")
diabetes <- read.csv("C:/Users/mathl/Downloads/archive/diabetes.csv")
View(diabetes)
diabetes <- read.csv("C:/Users/mathl/Downloads/archive/diabetes.csv")
View(diabetes)
View(diabetes)
View(diabetes)
# Base de dados aleatória:
set.seed(23) base1 <- sample(x <- 1L:100L, size <- 15, replace = TRUE)
# Base de dados aleatória:
set.seed(23)
base1 <- sample(x <- 1L:100L, size <- 15, replace = TRUE)
cat("BASE DE DADOS SIMULADA:", base1) # Impressão com formatação.
# Base de dados real:
base2 <- read.csv("diabetes.csv", sep=",", dec=".")
base2 <- base2$DiabetesPedigreeFunction
cat("\n\nBASE DE DADOS REAL:", base2)
# Base de dados aleatória:
set.seed(23)
base1 <- sample(x <- 1L:100L, size <- 15, replace = TRUE)
cat("BASE DE DADOS SIMULADA:", base1) # Impressão com formatação.
# Base de dados real:
base2 <- read.csv("diabetes.csv", sep=",", dec=".")
base2 <- base2$DiabetesPedigreeFunction
cat("\n\nBASE DE DADOS REAL:", head(base2, n = 10), "...")
mediana <- function(base) {
aux <- sort(base)
n <- length(base)
if (n %% 2 == 0) {
return((aux[n / 2] + aux[n / 2 + 1]) / 2)
} else {
return(aux[ n %/% 2 + 1]) }
}
cat("\nA mediana da base de dados simulada é:", mediana(base1))
media = function(base) {
soma <- 0
for(i in base) {
soma <- soma + i
}
return(soma / length(base))
}
cat("A média da base de dados simulada é:", sprintf("%.2f",
media(base1)))
cat("A mediana da base de dados simulada é:", median(base1))
# Base de dados aleatória:
set.seed(23)
base1 <- sample(x <- 1L:100L, size <- 15, replace = TRUE)
cat("BASE DE DADOS SIMULADA:", base1) # Impressão com formatação.
# Base de dados real:
base2 <- read.csv("diabetes.csv", sep=",", dec=".")
base2 <- base2$DiabetesPedigreeFunction
cat("\n\nBASE DE DADOS REAL:", head(base2, n = 10), "...")
media = function(base) {
soma <- 0
for(i in base) {
soma <- soma + i
}
return(soma / length(base))
}
cat("A média da base de dados simulada é:", sprintf("%.2f",
media(base1)))
cat("A média da base de dados simulada é:", sprintf("%.2f",
mean(base1)))
mediana <- function(base) {
aux <- sort(base)
n <- length(base)
if (n %% 2 == 0) {
return((aux[n / 2] + aux[n / 2 + 1]) / 2)
} else {
return(aux[ n %/% 2 + 1]) }
}
cat("\nA mediana da base de dados simulada é:", mediana(base1))
cat("A mediana da base de dados simulada é:", median(base1))
varAmostral = function(base) {
soma <- 0
n <- length(base)
mediaB <- media(base)
for (i in 1:n) {
soma <- soma + (base[i] - mediaB)^2
}
return(soma / (n - 1))
}
cat("A Variância Amostral da base de dados simulada é: ", sprintf("%.2f", varAmostral(base1)))
cat("A Variância Amostral da base de dados simulada é:", sprintf("%.2f",
var(base1)))
cat("A Variância Populacional da base de dados simulada é:", sprintf("%.2f", var(base1) \* (length(base1) - 1) / length(base1)))
cat("A Variância Populacional da base de dados simulada é:", sprintf("%.2f", var(base1) * (length(base1) - 1) / length(base1)))
# A linguagem R não possui a função voltada para a variância populacional.
# Base de dados aleatória:
set.seed(23)
base1 <- sample(x <- 1L:100L, size <- 15, replace = TRUE)
cat("BASE DE DADOS SIMULADA:", base1) # Impressão com formatação.
# Base de dados real:
base2 <- read.csv("diabetes.csv", sep=",", dec=".")
base2 <- base2$DiabetesPedigreeFunction
cat("\n\nBASE DE DADOS REAL:", head(base2, n = 10), "...")
media = function(base) {
soma <- 0
for(i in base) {
soma <- soma + i
}
return(soma / length(base))
}
cat("A média da base de dados simulada é:", sprintf("%.2f",
media(base1)))
cat("A média da base de dados simulada é:", sprintf("%.2f",
mean(base1)))
mediana <- function(base) {
aux <- sort(base)
n <- length(base)
if (n %% 2 == 0) {
return((aux[n / 2] + aux[n / 2 + 1]) / 2)
} else {
return(aux[ n %/% 2 + 1]) }
}
cat("\nA mediana da base de dados simulada é:", mediana(base1))
cat("A mediana da base de dados simulada é:", median(base1))
varAmostral = function(base) {
soma <- 0
n <- length(base)
mediaB <- media(base)
for (i in 1:n) {
soma <- soma + (base[i] - mediaB)^2
}
return(soma / (n - 1))
}
cat("A Variância Amostral da base de dados simulada é: ", sprintf("%.2f", varAmostral(base1)))
cat("A Variância Amostral da base de dados simulada é:", sprintf("%.2f",
var(base1)))
varPopul <- function(base) {
soma <- 0
n <- length(base)
mediaB <- media(base)
for (i in 1:n) {
soma <- soma + (base[i] - mediaB)^2
}
return(soma / n)
}
cat("A Variância Populacional da base de dados simulada é: ", sprintf("%.2f", varPopul(base1)))
cat("A Variância Populacional da base de dados simulada é:", sprintf("%.2f", var(base1) * (length(base1) - 1) / length(base1)))
# A linguagem R não possui a função voltada para a variância populacional.
desvAmostral <- function(base) {
return(sqrt(varAmostral(base1)))
}
cat("O desvio padrão amostral da base de dados simulada é: ", sprintf("%.2f", desvAmostral(base1)))
cat("O desvio padrão amostral da base de dados simulada é: ", sprintf("%.2f", sd(base1)))
desvPopul <- function(base) {
return(sqrt(varPopul(base1)))
}
cat("O desvio padrão populacional da base de dados simulada é: ", sprintf("%.2f", desvPopul(base1)))
cat("O desvio padrão populacional da base de dados simulada é: ", sprintf("%.2f",sd(base1) * sqrt(length(base1) - 1) / sqrt(length(base1)) ))
# O R não possui nenhuma função pronta para desvio padrão populacional
quartis <- function(base) {
aux <- base
if(length(base) %% 2 == 0) {
aux <- c(aux, median(base))
}
aux <- sort(aux)
n <- length(aux)
q2 <- median(aux)
q1 <- median(aux[1:which(aux == q2)])
q3 <- median(aux[which(aux == q2):n])
qts <- c(q1, q2, q3)
return(qts)
}
quartis1 <- quartis(base1)
cat("Primeiro quartil:", quartis1[1], "\n")
cat("Segundo quartil (mediana): ", quartis1[2], "\n")
cat("Terceiro quartil: ", quartis1[3], "\n")
cat("Primeiro quartil: ", quantile(base1, probs = 0.25), "\n")
cat("Segundo quartil: ", quantile(base1, probs = 0.50), "\n")
cat("Terceiro quartil: ", quantile(base1, probs = 0.75), "\n")
hist(base1,col = "blue", border = "black", main = "Histograma da base de dados simulada", xlab = "Valores", ylab = "Frequência")
boxplot(base1, main = "Boxplot da base simulada", horizontal = TRUE, col = "red")
cat("A média da base de dados real é: ", sprintf("%.2f", media(base2)))
cat("A média da base de dados simulada é: ", sprintf("%.2f", mean(base2)))
cat("\nA mediana da base de dados real é: ", mediana(base2))
cat("A mediana da base de dados real é: ", median(base2))
cat("A Variância Amostral da base de dados real é: ", sprintf("%.2f", varAmostral(base2)))
cat("A Variância Amostral da base de dados real é: ", sprintf("%.2f", var(base2)))
cat("A Variância Populacional da base de dados real é: ", sprintf("%.2f", varPopul(base2)))
cat("A Variância Populacional da base de dados real é: ", sprintf("%.2f", var(base2) * (length(base2) - 1) / length(base2)))
# A linguagem R não possui a função voltada para a variância populacional.
cat("O desvio padrão amostral da base de dados real é: ", sprintf("%.2f", desvAmostral(base2)))
cat("O desvio padrão amostral da base de dados real é: ", sprintf("%.2f", sd(base2)))
cat("O desvio padrão populacional da base de dados real é: ", sprintf("%.2f", desvPopul(base2)))
cat("O desvio padrão populacional da base de dados real é: ", sprintf("%.2f",sd(base2) * sqrt(length(base2) - 1) / sqrt(length(base2)) ))
# O R não possui nenhuma função pronta para desvio padrão populacional
quartis2 <- quartis(base2)
cat("Primeiro quartil:", quartis2[1], "\n")
cat("Segundo quartil (mediana): ", quartis2[2], "\n")
cat("Terceiro quartil: ", quartis2[3], "\n")
cat("Primeiro quartil: ", quantile(base2, probs = 0.25), "\n")
cat("Segundo quartil: ", quantile(base2, probs = 0.50), "\n")
cat("Terceiro quartil: ", quantile(base2, probs = 0.75), "\n")
hist(base2,col = "blue", border = "black", main = "Histograma da base de dados real", xlab = "Valores", ylab = "Frequência")
boxplot(base1, main = "Boxplot da base real", horizontal = TRUE, col = "red")
# Base de dados aleatória:
set.seed(23)
base1 <- sample(x <- 1L:100L, size <- 15, replace = TRUE)
cat("BASE DE DADOS SIMULADA:", base1) # Impressão com formatação.
# Base de dados real:
base2 <- read.csv("diabetes.csv", sep=",", dec=".")
base2 <- base2$DiabetesPedigreeFunction
cat("\n\nBASE DE DADOS REAL:", head(base2, n = 10), "...")
media = function(base) {
soma <- 0
for(i in base) {
soma <- soma + i
}
return(soma / length(base))
}
cat("A média da base de dados simulada é:", sprintf("%.2f",
media(base1)))
cat("A média da base de dados simulada é:", sprintf("%.2f",
mean(base1)))
mediana <- function(base) {
aux <- sort(base)
n <- length(base)
if (n %% 2 == 0) {
return((aux[n / 2] + aux[n / 2 + 1]) / 2)
} else {
return(aux[ n %/% 2 + 1]) }
}
cat("\nA mediana da base de dados simulada é:", mediana(base1))
cat("A mediana da base de dados simulada é:", median(base1))
varAmostral = function(base) {
soma <- 0
n <- length(base)
mediaB <- media(base)
for (i in 1:n) {
soma <- soma + (base[i] - mediaB)^2
}
return(soma / (n - 1))
}
cat("A Variância Amostral da base de dados simulada é: ", sprintf("%.2f", varAmostral(base1)))
cat("A Variância Amostral da base de dados simulada é:", sprintf("%.2f",
var(base1)))
varPopul <- function(base) {
soma <- 0
n <- length(base)
mediaB <- media(base)
for (i in 1:n) {
soma <- soma + (base[i] - mediaB)^2
}
return(soma / n)
}
cat("A Variância Populacional da base de dados simulada é: ", sprintf("%.2f", varPopul(base1)))
cat("A Variância Populacional da base de dados simulada é:", sprintf("%.2f", var(base1) * (length(base1) - 1) / length(base1)))
# A linguagem R não possui a função voltada para a variância populacional.
desvAmostral <- function(base) {
return(sqrt(varAmostral(base1)))
}
cat("O desvio padrão amostral da base de dados simulada é: ", sprintf("%.2f", desvAmostral(base1)))
cat("O desvio padrão amostral da base de dados simulada é: ", sprintf("%.2f", sd(base1)))
desvPopul <- function(base) {
return(sqrt(varPopul(base1)))
}
cat("O desvio padrão populacional da base de dados simulada é: ", sprintf("%.2f", desvPopul(base1)))
cat("O desvio padrão populacional da base de dados simulada é: ", sprintf("%.2f",sd(base1) * sqrt(length(base1) - 1) / sqrt(length(base1)) ))
# O R não possui nenhuma função pronta para desvio padrão populacional
quartis <- function(base) {
aux <- base
if(length(base) %% 2 == 0) {
aux <- c(aux, median(base))
}
aux <- sort(aux)
n <- length(aux)
q2 <- median(aux)
q1 <- median(aux[1:which(aux == q2)])
q3 <- median(aux[which(aux == q2):n])
qts <- c(q1, q2, q3)
return(qts)
}
quartis1 <- quartis(base1)
cat("Primeiro quartil:", quartis1[1], "\n")
cat("Segundo quartil (mediana): ", quartis1[2], "\n")
cat("Terceiro quartil: ", quartis1[3], "\n")
cat("Primeiro quartil: ", quantile(base1, probs = 0.25), "\n")
cat("Segundo quartil: ", quantile(base1, probs = 0.50), "\n")
cat("Terceiro quartil: ", quantile(base1, probs = 0.75), "\n")
hist(base1,col = "blue", border = "black", main = "Histograma da base de dados simulada", xlab = "Valores", ylab = "Frequência")
boxplot(base1, main = "Boxplot da base simulada", horizontal = TRUE, col = "red")
cat("A média da base de dados real é: ", sprintf("%.2f", media(base2)))
cat("A média da base de dados simulada é: ", sprintf("%.2f", mean(base2)))
cat("\nA mediana da base de dados real é: ", mediana(base2))
cat("A mediana da base de dados real é: ", median(base2))
cat("A Variância Amostral da base de dados real é: ", sprintf("%.2f", varAmostral(base2)))
cat("A Variância Amostral da base de dados real é: ", sprintf("%.2f", var(base2)))
cat("A Variância Populacional da base de dados real é: ", sprintf("%.2f", varPopul(base2)))
cat("A Variância Populacional da base de dados real é: ", sprintf("%.2f", var(base2) * (length(base2) - 1) / length(base2)))
# A linguagem R não possui a função voltada para a variância populacional.
cat("O desvio padrão amostral da base de dados real é: ", sprintf("%.2f", desvAmostral(base2)))
cat("O desvio padrão amostral da base de dados real é: ", sprintf("%.2f", sd(base2)))
cat("O desvio padrão populacional da base de dados real é: ", sprintf("%.2f", desvPopul(base2)))
cat("O desvio padrão populacional da base de dados real é: ", sprintf("%.2f",sd(base2) * sqrt(length(base2) - 1) / sqrt(length(base2)) ))
# O R não possui nenhuma função pronta para desvio padrão populacional
quartis2 <- quartis(base2)
cat("Primeiro quartil:", quartis2[1], "\n")
cat("Segundo quartil (mediana): ", quartis2[2], "\n")
cat("Terceiro quartil: ", quartis2[3], "\n")
cat("Primeiro quartil: ", quantile(base2, probs = 0.25), "\n")
cat("Segundo quartil: ", quantile(base2, probs = 0.50), "\n")
cat("Terceiro quartil: ", quantile(base2, probs = 0.75), "\n")
hist(base2,col = "blue", border = "black", main = "Histograma da base de dados real", xlab = "Valores", ylab = "Frequência")
boxplot(base1, main = "Boxplot da base real", horizontal = TRUE, col = "red")
